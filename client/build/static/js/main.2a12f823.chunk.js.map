{"version":3,"sources":["redux/actions/auth.js","redux/actionTypes.js","component/Header.js","component/PrivateRoute.js","component/PublicRoute.js","screens/Home.js","component/Spinner.js","screens/Login.js","screens/Register.js","screens/NoMatch.js","screens/Profile.js","App.js","serviceWorker.js","redux/reducers/app.js","redux/reducers/auth.js","redux/reducers/users.js","redux/store.js","index.js"],"names":["handleRegistration","credentials","callback","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","getState","response","wrap","_context2","prev","next","fetch","method","body","headers","Content-Type","sent","json","abrupt","t0","console","log","stop","_x3","_x4","apply","this","arguments","handleLogIn","_ref3","_callee3","user","_context3","success","objectSpread","token","login","_x5","handleUpdate","_ref4","_callee4","_context4","JSON","stringify","Authorization","concat","auth","loggedInUser","_x6","_x7","uploadImage","formdata","_ref5","_callee5","_context5","image","_x8","_x9","type","payload","logout","Header","onMouseDown","_this","props","react_default","createElement","className","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","isAuthenticated","href","Component","withRouter","connect","state","loggedIn","app","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Home","name","setState","$","modal","_this2","style","display","flexDirection","width","margin","alt","src","data-dismiss","Spinner","position","top","left","height","justifyContent","alignItems","zIndex","backgroundColor","opacity","Login","email","password","isLoading","messageType","messageText","onSubmit","_callee","e","_context","preventDefault","history","push","message","alert","Spinner_Spinner","htmlFor","value","onChange","defineProperty","target","Register","NoMatch","Profile","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","file","base64","formData","files","getBase64","_x","firstName","lastName","_x2","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","App","status","BrowserRouter","component_Header","Switch","exact","path","component_PublicRoute","component_PrivateRoute","Boolean","window","location","hostname","match","initialState","isAppIntializing","AppReducer","length","undefined","action","flag","AuthReducer","isRequestingToken","users","isFetchingUsers","isFetchingUserProfile","userProfile","sentFriendRequestList","receivedFriendRequestList","friendsList","mutualFriendList","UsersReducer","encryptor","createEncryptor","secretKey","onError","persistConfig","key","storage","transforms","rootReducers","combineReducers","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","es","integration_react","loading","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a12f823.chunk.js","sourcesContent":["import * as Actions from '../actionTypes';\n\nexport const verify = () => async(dispatch, getState) => {\n    if(getState().auth.loggedInUser){\n        try {\n            let response = await fetch('http://localhost:4000/users/verify', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${getState().auth.loggedInUser.token}`\n                }\n            })\n            if (response.status === 401) dispatch(logout())\n        } catch (error) {\n            console.log(error, 'error')\n        }\n    }\n}\n\nexport const handleRegistration = (credentials, callback) => async(dispatch, getState) => {\n    try {\n        let response = await fetch('http://localhost:4000/users/register', {\n            method: 'POST',\n            body: credentials,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        response = await response.json()\n        return callback && callback(response)\n    } catch (error) {\n        console.log(error, 'error')\n    }\n    return callback && callback(false)\n}\n\nexport const handleLogIn = (credentials, callback) => async dispatch => {\n    try {\n        let response = await fetch('http://localhost:4000/users/authenticate', {\n            method: 'POST',\n            body: credentials,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        response = await response.json()\n        if(response.success){\n            const user = { token: response.token, ...response.user }\n            dispatch(login(user))\n        }\n        return callback && callback(response)\n    } catch (error) {\n        console.log(error, 'error')\n    }\n    return callback && callback(false)\n}\n\nexport const handleUpdate = (credentials, callback) => async (dispatch, getState) => {\n    try {\n        let response = await fetch('http://localhost:4000/users/update', {\n            method: 'POST',\n            body: JSON.stringify(credentials),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${getState().auth.loggedInUser.token}`\n            }\n        })\n        response = await response.json()\n        if(response.success){\n            const user = { ...getState().auth.loggedInUser, ...credentials }\n            dispatch(login(user))\n        }\n        return callback && callback(response)\n    } catch (error) {\n        console.log(error, 'error')\n    }\n    return callback && callback(false)\n}\n\nexport const uploadImage = (formdata, callback) => async (dispatch, getState) => {\n    try {\n        let response = await fetch('/users/upload-image', {\n            method: 'post',\n            body: JSON.stringify(formdata),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${getState().auth.loggedInUser.token}`\n            },\n        })\n        response = await response.json()\n        if(response.success){\n            const user = { ...getState().auth.loggedInUser, image: `http://localhost:4000/${response.image}` }\n            dispatch(login(user))   \n        }\n        return callback && callback(response)\n    } catch (error) {\n        console.log(error, 'error')\n    }\n    return callback && callback(false)\n}\n\nexport const login = user => {\n    return {\n        type: Actions.LOGIN,\n        payload: {\n            user\n        }\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: Actions.LOGOUT\n    }\n}","export const REQUESTING_TOKEN = 'REQUESTING_TOKEN'\nexport const LOGIN = 'LOGIN'\nexport const SET_USER_TOKEN = 'SET_USER_TOKEN'\nexport const LOGOUT = 'LOGOUT'\nexport const IS_REGISTERING = 'IS_REGISTERING'\nexport const REGISTER = 'REGISTER'\nexport const IS_RESETTING_PASSWORD = 'IS_RESETTING_PASSWORD'\nexport const RESET_PASSWORD = 'RESET_PASSWORD'\nexport const IS_CHANGING_PASSWORD = 'IS_CHANGING_PASSWORD'\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD'\nexport const IS_LOGGING_BY_THIRD_PARTY = 'IS_LOGGING_BY_THIRD_PARTY'\nexport const LOGIN_BY_THIRD_PARTY = 'LOGIN_BY_THIRD_PARTY'\nexport const IS_FETCHING_USERS = 'IS_FETCHING_USERS'\nexport const SET_RECEIVED_USERS = 'SET_RECEIVED_USERS'\nexport const IS_UPDATING_PROFILE = 'IS_UPDATING_PROFILE'\nexport const IS_SENDING_EMAIL_VERIFICATION = 'IS_SENDING_EMAIL_VERIFICATION'\nexport const IS_FETCHING_USER_PROFILE = 'IS_FETCHING_USER_PROFILE'\nexport const SET_RECEIVED_USER_PROFILE = 'SET_RECEIVED_USER_PROFILE'\nexport const FETCH_FOLLOWERS_REQUEST = 'FETCH_FOLLOWERS_REQUEST'\nexport const FETCH_FOLLOWERS_SUCCESS = 'FETCH_FOLLOWERS_SUCCESS'\nexport const FETCH_FOLLOWING_ERROR = 'FETCH_FOLLOWING_ERROR'\nexport const FETCH_FOLLOWING_REQUEST = 'FETCH_FOLLOWING_REQUEST'\nexport const FETCH_FOLLOWING_SUCCESS = 'FETCH_FOLLOWING_SUCCESS'\nexport const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST'\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS'\nexport const SENDING_USER_REQUEST_ERROR = 'SENDING_USER_REQUEST_ERROR'\nexport const SENDING_USER_REQUEST = 'SENDING_USER_REQUEST'\nexport const FOLLOW_USER_ERROR = 'FOLLOW_USER_ERROR'\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST'\nexport const UNFOLLOW_USER_ERROR = 'UNFOLLOW_USER_ERROR'\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST'\nexport const CLEAR_CHAT_SESSION = 'CLEAR_CHAT_SESSION'\nexport const CREATE_CHAT_ERROR = 'CREATE_CHAT_ERROR'\nexport const CREATE_CHAT_REQUEST = 'CREATE_CHAT_REQUEST'\nexport const CREATE_CHAT_SUCCESS = 'CREATE_CHAT_SUCCESS'\nexport const FETCH_CHAT_GROUPS_REQUEST = 'FETCH_CHAT_GROUPS_REQUEST'\nexport const FETCH_CHAT_GROUPS_SUCCESS = 'FETCH_CHAT_GROUPS_SUCCESS'\nexport const FETCH_CHAT_MESSAGES_ERROR = 'FETCH_CHAT_MESSAGES_ERROR'\nexport const FETCH_CHAT_MESSAGES_REQUEST = 'FETCH_CHAT_MESSAGES_REQUEST'\nexport const FETCH_CHAT_MESSAGES_SUCCESS = 'FETCH_CHAT_MESSAGES_SUCCESS'\nexport const MESSAGE_RECEIVED = 'MESSAGE_RECEIVED'\nexport const SEND_CHAT_MSG_ERROR = 'SEND_CHAT_MSG_ERROR'\nexport const SEND_CHAT_MSG_REQUEST = 'SEND_CHAT_MSG_REQUEST'\nexport const SEND_CHAT_MSG_SUCCESS = 'SEND_CHAT_MSG_SUCCESS'\nexport const SET_SENT_FRIEND_REQUEST_LIST = 'SET_SENT_FRIEND_REQUEST_LIST'\nexport const SET_RECEIVED_FRIEND_REQUEST_LIST = 'SET_RECEIVED_FRIEND_REQUEST_LIST'\nexport const SET_FRIEND_LIST = 'SET_FRIEND_LIST'\nexport const SET_GEO_LOCATION = 'SET_GEO_LOCATION'\nexport const IS_APP_INITIALIZING = 'IS_APP_INITIALIZING'\nexport const SET_MUTUAL_FRIEND_LIST = 'SET_MUTUAL_FRIEND_LIST'\nexport const FETCH_CHAT_GROUPS_ERROR = 'FETCH_CHAT_GROUPS_ERROR'\nexport const RECEIVED_NOTIFICATIONS = 'RECEIVED_NOTIFICATIONS'\nexport const FETCHING_NOTIFICATIONS = 'FETCHING_NOTIFICATIONS'\nexport const FETCHING_NOTIFICATIONS_ERROR = 'FETCHING_NOTIFICATIONS_ERROR'\nexport const SET_ACTIVE_CHATING_USER_ID = 'SET_ACTIVE_CHATING_USER_ID'\nexport const CLEAR = 'CLEAR'","import React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nimport { logout } from '../redux/actions/auth'\n\nclass Header extends Component {\n    onMouseDown = () => this.props.dispatch(logout())\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <Link className=\"navbar-brand\" to=\"/\">React-Node App</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div id=\"navbarNavDropdown\" className=\"navbar-collapse collapse\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        { this.props.isAuthenticated && <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\n                        </li>}\n                    </ul>\n                    <ul className=\"navbar-nav\">\n                        { this.props.isAuthenticated && <li className=\"nav-item dropdown\">\n                            <a onMouseDown={this.onMouseDown} className=\"nav-link \" href=\"#\">\n                                Logout\n                            </a>\n                        </li>}\n                        { !this.props.isAuthenticated && <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                        </li>}\n                        { !this.props.isAuthenticated && <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/register\">Register</Link>\n                        </li>}\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth : state.auth,\n    isAuthenticated : state.auth.loggedIn,\n    app : state.app\n});\nexport default withRouter(connect(mapStateToProps, null)(Header))","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => {\n    return (\n        <Route {...rest} render={(props) => (\n            isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />\n        )}/>\n    )\n}\nconst mapStateToProps = state => ({\n    isAuthenticated : state.auth.loggedIn,\n});\nexport default connect(mapStateToProps)(PrivateRoute)","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst PublicRoute = ({ component: Component, isAuthenticated, ...rest }) => {\n    return (\n        <Route {...rest} render={props => (\n            isAuthenticated ? <Redirect to='/' /> : <Component {...props} />\n        )} />\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated : state.auth.loggedIn,\n});\nexport default connect(mapStateToProps)(PublicRoute)\n","import React, { Component } from 'react';\nimport $ from 'jquery'\n\nexport default class Home extends Component {\n  state = {\n    name: ''\n  }\n  onMouseDown = name => this.setState({ name }, () => $('#myModal').modal('toggle'))\n  render() {\n    return (\n        <div className=\"container\"  style={{ display: 'flex', flexDirection: 'row' }}>\n\n            <div className=\"card\" style={{ width: '300px', margin: '10px' }}>\n              <img className=\"card-img-top\" alt=\"My Awesome akshdjkashd\" src=\"https://www.w3schools.com/bootstrap4/img_avatar5.png\" style={{ width: '100%' }} />\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Scarlet Johnshon</h4>\n                <p className=\"card-text\">Some example text some example text. John Doe is an architect and engineer</p>\n                <button type=\"button\" className=\"btn btn-primary\" onMouseDown={() => this.onMouseDown('Scarlet Johnshon')}>\n                  See Profile\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card\" style={{ width: '300px', margin: '10px' }}>\n              <img className=\"card-img-top\" alt=\"My Awesome\" src=\"https://www.w3schools.com/bootstrap4/img_avatar1.png\" style={{ width: '100%' }} />\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">John Snow</h4>\n                <p className=\"card-text\">Some example text some example text. John Doe is an architect and engineer</p>\n                <button type=\"button\" className=\"btn btn-primary\" onMouseDown={() => this.onMouseDown('John Snow')}>\n                  See Profile\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card\" style={{ width: '300px', margin: '10px' }}>\n              <img className=\"card-img-top\" alt=\"My Awesome akshdjkashd\" src=\"https://www.w3schools.com/bootstrap4/img_avatar5.png\" style={{ width: '100%' }} />\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Lady Gaga</h4>\n                <p className=\"card-text\">Some example text some example text. John Doe is an architect and engineer</p>\n                <button type=\"button\" className=\"btn btn-primary\" onMouseDown={() => this.onMouseDown('Lady Gaga')}>\n                  See Profile\n                </button>\n              </div>\n            </div>\n\n            <div className=\"modal fade\" id=\"myModal\">\n              <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n\n                  <div className=\"modal-header\">\n                    <h4 className=\"modal-title\">User Detail</h4>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                  </div>\n\n                  <div className=\"modal-body\">\n                    <h4 className=\"card-title\">{ this.state.name || '' }</h4>\n                    <p className=\"card-text\">\n                      A user is a person who utilizes a computer or network service. \n                      Users of computer systems and software products generally lack the technical expertise required to fully understand how they work\n                    </p>\n                  </div>\n\n                  <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n        </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n        <div \n            style={{ \n                position: 'absolute', top: 0, left: 0, width: '100%', height: '100%',\n                justifyContent: 'center', alignItems: 'center', zIndex: 9999,\n                backgroundColor: '#000', opacity: .3, display: 'flex' \n            }}\n        >\n            <div className=\"spinner-border text-primary\" />\n        </div> \n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Spinner from '../component/Spinner'\nimport { handleLogIn } from '../redux/actions/auth'\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        isLoading: false,\n        messageType: '',\n        messageText: ''\n    }\n\n    onSubmit = async e => {\n        e.preventDefault()\n        if(this.state.email && this.state.password){\n            this.setState({ isLoading: true, messageType: '', messageText: '' })\n            const credentials = JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            })\n            this.props.dispatch(handleLogIn(credentials, response => {\n                this.setState({ isLoading: false })\n                if(!response.success){\n                    this.setState({ messageText: response.message, messageType: response.success ? 'success' : 'danger' })\n                }else{\n                    this.props.history.push('/profile')\n                }\n            }))\n        }else{\n            alert('All fields required')\n        }\n    }\n\n    render() {\n        return (\n            <div className='jus'>\n                { this.state.isLoading && <Spinner /> }\n                <div className='container'>\n                    <div className={`alert ${this.state.messageType === 'danger' ? 'alert-danger' : 'alert-success'} alert-dismissible fade ${this.state.messageText ? 'show' : ''}`}>\n                        <p>{ this.state.messageText }</p>\n                    </div>\n                </div>\n                <form onSubmit={this.onSubmit} className='col-md-4'>\n                    <h1>Login</h1>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email address:</label>\n                        <input \n                            type=\"email\" \n                            className=\"form-control\" \n                            id=\"email\" \n                            name='email'\n                            value={this.state.email}\n                            onChange={e => this.setState({ [e.target.name]: e.target.value })}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pwd\">Password:</label>\n                        <input \n                            onChange={e => this.setState({ [e.target.name]: e.target.value })} \n                            type=\"password\"\n                            name='password' \n                            value={this.state.password}\n                            className=\"form-control\" id=\"pwd\" \n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth : state.auth,\n    isAuthenticated : state.auth.loggedIn,\n    app : state.app\n});\n\nexport default withRouter(connect(mapStateToProps, null)(Login))","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Spinner from '../component/Spinner'\nimport { handleRegistration } from '../redux/actions/auth'\n\nclass Register extends Component {\n    state = {\n        email: '',\n        password: '',\n        isLoading: false,\n        messageType: '',\n        messageText: ''\n    }\n\n    onSubmit = async e => {\n        e.preventDefault()\n        if(this.state.email && this.state.password){\n            this.setState({ isLoading: true, messageType: '', messageText: '' })\n            const credentials = JSON.stringify({\n                email: this.state.email,\n                password: this.state.password\n            })\n            this.props.dispatch(handleRegistration(credentials, response => {\n                this.setState({ isLoading: false })\n                if(!response.success){\n                    this.setState({ messageText: response.message, messageType: response.success ? 'success' : 'danger' })\n                }else{\n                    this.props.history.push('/login')\n                }\n            }))\n        }else{\n            alert('All fields required')\n        }\n    }\n\n    render() {\n        return (\n            <div className='jus'>\n                { this.state.isLoading && <Spinner /> }\n                <div className='container'>\n                    <div className={`alert ${this.state.messageType === 'danger' ? 'alert-danger' : 'alert-success'} alert-dismissible fade ${this.state.messageText ? 'show' : ''}`}>\n                        <p>{ this.state.messageText }</p>\n                    </div>\n                </div>\n                <form onSubmit={this.onSubmit} className='col-md-4'>\n                    <h1>Register</h1>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email address:</label>\n                        <input \n                            type=\"email\" \n                            className=\"form-control\" \n                            id=\"email\" \n                            name='email'\n                            value={this.state.email}\n                            onChange={e => this.setState({ [e.target.name]: e.target.value })}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pwd\">Password:</label>\n                        <input \n                            onChange={e => this.setState({ [e.target.name]: e.target.value })} \n                            type=\"password\"\n                            name='password' \n                            value={this.state.password}\n                            className=\"form-control\" id=\"pwd\" \n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth : state.auth,\n    isAuthenticated : state.auth.loggedIn,\n    app : state.app\n});\n\nexport default withRouter(connect(mapStateToProps, null)(Register))","import React, { Component } from 'react';\n\nexport default class NoMatch extends Component {\n  render() {\n    return (\n        <div>\n            <h1>No Match Found</h1>\n        </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Spinner from '../component/Spinner'\nimport { handleUpdate, uploadImage } from '../redux/actions/auth'\n\nclass Profile extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            firstName: props.auth.loggedInUser.firstName || '',\n            lastName: props.auth.loggedInUser.lastName || '',\n            isLoading: false,\n            messageType: '',\n            messageText: ''\n        }\n    }\n\n    getBase64(file) {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = error => reject(error);\n        });\n    }\n\n    uploadImage = async e => {\n        this.setState({ isLoading: true, messageType: '', messageText: '' })\n        const file = e.target.files[0]\n\n        const base64 = await this.getBase64(file)\n        const formData = { image: base64 }\n\n        this.props.dispatch(uploadImage(formData, response => {\n            this.setState({ isLoading: false })\n            if(response){\n                this.setState({ \n                    messageText: response.message, \n                    messageType: response.success ? 'success' : 'danger' \n                })\n            }\n        }))\n    }\n\n    onSubmit = async e => {\n        e.preventDefault()\n        if(this.state.firstName || this.state.lastName){\n            this.setState({ isLoading: true, messageType: '', messageText: '' })\n            const credentials = {\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n            }\n            this.props.dispatch(handleUpdate(credentials, response => {\n                this.setState({ \n                    messageText: response.message, isLoading: false, \n                    messageType: response.success ? 'success' : 'danger' \n                })\n            }))\n        }\n    }\n\n    render() {\n        return (\n            <div className='jus'>\n                { this.state.isLoading && <Spinner /> }\n                <div className='container'>\n                    <div className={`alert ${this.state.messageType === 'danger' ? 'alert-danger' : 'alert-success'} alert-dismissible fade ${this.state.messageText ? 'show' : ''}`}>\n                        <p>{ this.state.messageText }</p>\n                    </div>\n                </div>\n                <form onSubmit={this.onSubmit} className='col-md-4'>\n                    <h1>Profile</h1>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"firstName\">First Name:</label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"firstName\" \n                            name='firstName'\n                            value={this.state.firstName}\n                            onChange={e => this.setState({ [e.target.name]: e.target.value })}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"lastName\">Last Name:</label>\n                        <input \n                            onChange={e => this.setState({ [e.target.name]: e.target.value })} \n                            type=\"text\"\n                            name='lastName' \n                            value={this.state.lastName}\n                            className=\"form-control\" id=\"lastName\" \n                        />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n\n                <div className='col-md-6'>\n                    <h1>Upload Profile Pic</h1>\n                    <input onChange={this.uploadImage} type=\"file\" name=\"photo\" />\n                    <img src={this.props.auth.loggedInUser.image} className=\"rounded\" alt=\"Cinque Terre\"></img>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth : state.auth,\n});\n\nexport default withRouter(connect(mapStateToProps)(Profile))","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nimport { verify } from './redux/actions/auth'\n\nimport Header from './component/Header'\nimport PrivateRoute from './component/PrivateRoute';\nimport PublicRoute from './component/PublicRoute';\n\nimport Home from './screens/Home'\nimport Login from './screens/Login'\nimport Register from './screens/Register'\nimport NoMatch from './screens/NoMatch'\nimport Profile from './screens/Profile'\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.dispatch(verify())\n  }\n  render() {\n    return (\n      <Router>\n        <div id=\"app\">\n          <Header />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <PublicRoute path=\"/login/\" component={Login} />\n            <PublicRoute path=\"/register/\" component={Register} />\n            <PrivateRoute exact path='/profile' component={Profile} />\n            <PublicRoute exact path='**' component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Action from '../actionTypes'\n\nconst initialState = {\n    isAppIntializing: false\n}\n\nclass AppReducer {\n  static reduce(state = initialState, action) {\n    if (AppReducer[action.type]) {\n      return AppReducer[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n\n  static [Action.IS_APP_INITIALIZING](state, action) {\n    return {\n        ...state,\n        isAppIntializing: action.payload.flag\n    }\n  }\n\n  static [Action.LOGOUT](state, action) {\n    return initialState\n  }\n\n  static [Action.CLEAR](state, action) {\n    return initialState;\n  }\n}\n\nexport default AppReducer.reduce","import * as Action from '../actionTypes'\n\nconst initialState = {\n  loggedIn: false,\n  loggedInUser: null,\n}\n\nclass AuthReducer {\n  static reduce(state = initialState, action) {\n    if (AuthReducer[action.type]) {\n      return AuthReducer[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n\n  static [Action.LOGIN](state, action) {\n    return {\n      ...state,\n      loggedInUser: { ...state.loggedInUser, ...action.payload.user },\n      loggedIn: true,\n      isRequestingToken: false,\n    }\n  }\n\n  static [Action.LOGOUT](state, action) {\n    return initialState;\n  }\n\n  static [Action.CLEAR](state, action) {\n    return initialState;\n  }\n}\n\nexport default AuthReducer.reduce","import * as Action from '../actionTypes'\n\nconst initialState = {\n  users: [],\n  isFetchingUsers: false,\n  isFetchingUserProfile: false,\n  userProfile: null,\n  sentFriendRequestList: [],\n  receivedFriendRequestList: [],\n  friendsList: [],\n  mutualFriendList: [],\n}\n\nclass UsersReducer {\n  static reduce(state = initialState, action) {\n    if (UsersReducer[action.type]) {\n      return UsersReducer[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n\n  static [Action.SET_FRIEND_LIST](state, action){\n    return {\n      ...state,\n      friendsList: action.payload.users\n    }\n  }\n\n  static [Action.SET_RECEIVED_FRIEND_REQUEST_LIST](state, action){\n    return {\n      ...state,\n      receivedFriendRequestList: action.payload.users\n    }\n  }\n\n  static [Action.SET_SENT_FRIEND_REQUEST_LIST](state, action){\n    return {\n      ...state,\n      sentFriendRequestList: action.payload.users\n    }\n  }\n\n  static [Action.IS_FETCHING_USER_PROFILE](state, action){\n    return {\n      ...state,\n      isFetchingUserProfile: action.payload.flag\n    }\n  }\n\n  static [Action.SET_RECEIVED_USER_PROFILE](state, action){\n    return {\n      ...state,\n      userProfile: action.payload.userProfile,\n      isFetchingUserProfile: false,\n    }\n  }\n\n  static [Action.IS_FETCHING_USERS](state, action){\n    return {\n      ...state,\n      isFetchingUsers: action.payload.flag\n    }\n  }\n\n  static [Action.SET_RECEIVED_USERS](state, action){\n    return {\n      ...state,\n      users: action.payload.users,\n      isFetchingUsers: false\n    }\n  }\n\n  static [Action.SET_MUTUAL_FRIEND_LIST](state, action){\n    return {\n      ...state,\n      mutualFriendList: action.payload.mutualFriendList,\n    }\n  }\n\n  static [Action.LOGOUT](state, action) {\n    return initialState;\n  }\n}\n\nexport default UsersReducer.reduce","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport createEncryptor from 'redux-persist-transform-encrypt'\n\nimport app from './reducers/app'\nimport auth from './reducers/auth'\nimport users from './reducers/users'\n\nconst encryptor = createEncryptor({\n    secretKey: 'happy-super-secret-key',\n    onError: error => {\n      console.log(error, 'encryptor');\n    }\n})\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    transforms: [encryptor],\n}\n\nconst rootReducers = combineReducers({ auth, users, app })\n\nconst persistedReducer = persistReducer(persistConfig, rootReducers)\n\nconst store = createStore(persistedReducer, applyMiddleware(thunk))\nconst persistor = persistStore(store)\n\nexport { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'popper.js'\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(<Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>  \n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}